import {
  calcTileType,
  calcHealthLevel,
  formatCharacterInfo,
  calcMoveRange,
} from '../../utils';

describe('calcTileType', () => {
  test('–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å "top-left" –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞ 0', () => {
    expect(calcTileType(0, 8)).toBe('top-left');
  });

  test('–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å "top-right" –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞ 7', () => {
    expect(calcTileType(7, 8)).toBe('top-right');
  });

  test('–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å "bottom-left" –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞ 56', () => {
    expect(calcTileType(56, 8)).toBe('bottom-left');
  });

  test('–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å "bottom-right" –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞ 63', () => {
    expect(calcTileType(63, 8)).toBe('bottom-right');
  });

  test('–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å "top" –¥–ª—è –∏–Ω–¥–µ–∫—Å–æ–≤ 1-6', () => {
    expect(calcTileType(1, 8)).toBe('top');
    expect(calcTileType(6, 8)).toBe('top');
  });

  test('–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å "bottom" –¥–ª—è –∏–Ω–¥–µ–∫—Å–æ–≤ 57-62', () => {
    expect(calcTileType(57, 8)).toBe('bottom');
    expect(calcTileType(62, 8)).toBe('bottom');
  });

  test('–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å "left" –¥–ª—è –∏–Ω–¥–µ–∫—Å–æ–≤ 8, 16, 24, 32, 40, 48', () => {
    expect(calcTileType(8, 8)).toBe('left');
    expect(calcTileType(16, 8)).toBe('left');
  });

  test('–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å "right" –¥–ª—è –∏–Ω–¥–µ–∫—Å–æ–≤ 15, 23, 31, 39, 47, 55', () => {
    expect(calcTileType(15, 8)).toBe('right');
    expect(calcTileType(23, 8)).toBe('right');
  });

  test('–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å "center" –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã—Ö —è—á–µ–µ–∫', () => {
    expect(calcTileType(20, 8)).toBe('center');
    expect(calcTileType(36, 8)).toBe('center');
  });

  test('–¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –¥–æ—Å–æ–∫ —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤', () => {
    expect(calcTileType(0, 4)).toBe('top-left');
    expect(calcTileType(3, 4)).toBe('top-right');
    expect(calcTileType(12, 4)).toBe('bottom-left');
    expect(calcTileType(15, 4)).toBe('bottom-right');
    expect(calcTileType(5, 4)).toBe('center');
  });
});

// ---

describe('calcHealthLevel', () => {
  test('–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å "critical" –ø—Ä–∏ –∑–¥–æ—Ä–æ–≤—å–µ < 15', () => {
    expect(calcHealthLevel(14)).toBe('critical');
    expect(calcHealthLevel(0)).toBe('critical');
  });

  test('–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å "normal" –ø—Ä–∏ –∑–¥–æ—Ä–æ–≤—å–µ –æ—Ç 15 –¥–æ 49', () => {
    expect(calcHealthLevel(15)).toBe('normal');
    expect(calcHealthLevel(49)).toBe('normal');
  });

  test('–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å "high" –ø—Ä–∏ –∑–¥–æ—Ä–æ–≤—å–µ >= 50', () => {
    expect(calcHealthLevel(50)).toBe('high');
    expect(calcHealthLevel(100)).toBe('high');
  });
});

// ---

describe('formatCharacterInfo', () => {
  test('–¥–æ–ª–∂–µ–Ω —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç', () => {
    const level = 1;
    const attack = 40;
    const defence = 10;
    const health = 100;
    const result = formatCharacterInfo`üéñ${level} ‚öî${attack} üõ°${defence} ‚ù§${health}`;
    expect(result).toBe('üéñ1 ‚öî40 üõ°10 ‚ù§100');
  });

  test('–¥–æ–ª–∂–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω—É–ª–µ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è', () => {
    const level = 0;
    const attack = 0;
    const defence = 0;
    const health = 0;
    const result = formatCharacterInfo`üéñ${level} ‚öî${attack} üõ°${defence} ‚ù§${health}`;
    expect(result).toBe('üéñ0 ‚öî0 üõ°0 ‚ù§0');
  });
});

// ---

describe('calcMoveRange', () => {
  test('–¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —è—á–µ–π–∫–∏ –¥–ª—è —Ä–∞–¥–∏—É—Å–∞ 1 –∏–∑ –ø–æ–∑–∏—Ü–∏–∏ 27', () => {
    const result = calcMoveRange(27, 1); // –ü–æ–∑–∏—Ü–∏—è 27 (—Ä—è–¥ 3, —Å—Ç–æ–ª–±–µ—Ü 3)
    expect(result).toEqual([18, 19, 20, 26, 28, 34, 35, 36]); // 8 —è—á–µ–µ–∫: –≤—Å–µ —Å–æ—Å–µ–¥–Ω–∏–µ, –≤–∫–ª—é—á–∞—è –¥–∏–∞–≥–æ–Ω–∞–ª–∏
  });

  test('–¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —è—á–µ–π–∫–∏ –¥–ª—è —Ä–∞–¥–∏—É—Å–∞ 2 –∏–∑ –ø–æ–∑–∏—Ü–∏–∏ 27', () => {
    const result = calcMoveRange(27, 2);
    expect(result).toEqual([
      9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 25, 26, 28, 29, 33, 34, 35, 36, 37,
      41, 42, 43, 44, 45,
    ]); // 5x5 –∫–≤–∞–¥—Ä–∞—Ç –±–µ–∑ —Ü–µ–Ω—Ç—Ä–∞ = 24 —è—á–µ–π–∫–∏
  });

  test('–¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —è—á–µ–π–∫–∏ –¥–ª—è —Ä–∞–¥–∏—É—Å–∞ 4 –∏–∑ –ø–æ–∑–∏—Ü–∏–∏ 0', () => {
    const result = calcMoveRange(0, 4); // –£–≥–ª–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è (0,0)
    expect(result).toEqual([
      1, 2, 3, 4, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 32,
      33, 34, 35, 36,
    ]); // 5x5 - 1 = 24 —è—á–µ–π–∫–∏
  });

  test('–¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –¥–ª—è —Ä–∞–¥–∏—É—Å–∞ 0', () => {
    const result = calcMoveRange(27, 0);
    expect(result).toEqual([]); // –ù–∏–∫–∞–∫–∏—Ö —è—á–µ–µ–∫, —Ç–∞–∫ –∫–∞–∫ —Ä–∞–¥–∏—É—Å 0
  });
});
